Sentence
各位同學
我們今天要介紹一個過去十幾年來。
在這個產業界最主流的一個創業的方法。
叫做[Learn Star Art]。
開始之前，我先把上個禮拜。
我們談到的創業計畫書。
我那邊有一些範本，但是我忘了請助教放上去。
"待會兒我再補給助教,請他上傳。"
今天的這個中文翻譯。
[Learn Star Art]是從美國。
"其實九零年代,應該更早以前。"
"八零年代,[Toyota]的所謂的金石製造。"
這個ManiFactory就是Learn Manufacturing。
帶動了一股新的思維
從製造再到創業
Learn Star Art的這個書大概在2006、2008年出來
就未為風潮
尤其在美國加州的這個矽谷
這一股風潮
"在台灣,Learn Star Art不見得適用在每一個領域的創業"
但是它一定是適合在我們談的這個
以資通訊、資電這個領域的創業的一種
作為一種方法
這個其實是非常合適
尤其以軟體為核心的這種科技創業
Learn Star Art是一個非常好的方法論
這個方法論跟我們後面要談的研發管理的方法論
"雖然不一樣,但是它們可以形成顧及"
我會特別在這兩種
一個是創業的方法論
一個是研發的方法論
創業方法論跟研發方法論可以連結在一起
研發方法論可以補足在精神創業的方法論裡面
對於研發這個部分談得太少
剛好可以補這個部分
所以因為我們上一次談創業計畫書
我們今天談創業的方法論
剛好銜接的創業計畫書裡面
因為我們的創業計畫書上次我們介紹說
最後要有一頁的這個占要
"讓你的夥伴,你的投資人,你的供應商,你的營銷商"
讓他們在最短的時間裡了解你的創業藍圖
還有一種在最短的時間裡面
讓人家可以了解整個創業的架構藍圖的叫做Rain Campus
叫做金石創業圖
"我有一個檔案,一個world檔"
提供這樣一個表格
各位也可以自己畫
金石創業的方法論裡面
最後可以濃縮在一頁圖表裡面
這個在創業的領域
其實不只是創業領域
在所有企業管理的領域裡面
今天還會提到
有一位日本的教授提出一頁企劃
就是one page
把所有的企劃活動
每個環節都是用one page來呈現
在台灣也有很多翻譯的書
這個概念跟我們要談的Rain Startup是一樣的
我們最後把Rain Startup的構想濃縮在一頁
各位今天上完課以後
可以試著開始整理創業計畫書之前
你先畫出這張圖
之後可以把這張圖的概念
再擴散到整個創業計畫書裡面
Rain Startup是最早的
這本是英文書
中文都有
這個是Rain Startup
這個是Rain Startup
看看Rain有什麼差別
其實這個作者
他的書認前後好幾本
內容對我來說大同小異
不過有些比較強調在方法論
這個方法論的特色
跟其他創業的書最大的不一樣在於
強調的是如何去轉向
轉向就是這個Python
就是這個Python的轉向
就是開一開沒路的要轉向
你的創業要如何轉向
在什麼時間點要轉向
哪一些事情你要堅持
怎麼樣可以用最大的速度
叫做Acceleration
最大的速度
最大的速度
這邊叫Acceleration
最大的加速去運作這個事業
這裡有幾個關鍵字
比較少在其他的創業書看到
一個就是叫做Python
就是轉向
轉向比較少在一般創業書看到
轉向的意思就是說
如果你評估這個不可行
那你這時候就要立刻轉向
一般的創業書
他可能要花很多時間去規劃
去籌設然後去運作
所以轉向是不容易的
因為這個各位可以想像
一個房子如果一旦蓋起來
說我要換個方向
什麼房子要換個方向
那談得容易
所以如果要做到轉向
那代表這個企業
必須是非常的輕巧
非常的彈性
非常容易改變
第二個是加速
這個企業必須要非常的快
要很快
快是什麼意思呢
快就是說不管他在做
產品的設計
做研發
做生產
或者是行銷
這個cycle必須要非常的快
為什麼要快
因為這個
因為他的這個
當這個企業的運作變快的時候
他的生命週期就縮短
第一個在高科技的這個領域裡面
產品的推陳出現非常快
第二個如果你要快
你勢必要犧牲掉一些東西
譬如說品質
譬如說功能
那犧牲掉品質跟功能的目的
就是為了要加快
那為什麼要加快
因為他希望能夠面對客戶
所以他希望在最短的時間裡面
能夠把這個產品
就導入到客戶端
但是因為他的品質跟性能不佳
所以客戶端那邊很可能就是
馬上就會發現有一些問題
所以這時候
這個產品就會再回到了
這個創業團隊
創業團隊這時候
又開始重新的這個
啟動又一輪的這個產品的開發
產品的開發
所以呢
他不斷加速的結果就是讓這個
這個cycle的這個
飛機時間非常短
時間非常短
那這兩個概念大概是這個
精實創業跟一般的這種創業的書裡面
最大的這個差異
所以現在先
一開始就先跟各位講
這個方法跟其他的一般的這個
創業方法的差別
整個精實創業的這個一些
這個核心的這種概念
叫做這個
這個建造測試
其實這應該叫做驗證
這叫做測試
驗證呢
就是
他不是在實驗室裡面去做驗證
而是直接deliver給客戶
去驗證
那驗證之後呢
有一些不充分的地方
有一些瑕疵品質不良的
或者功能不足的地方呢
就是這個我們下一個cycle
要這個設計的
所以他的這個
這個核心概念呢
就是這個cycle
從這個build
建造
產品的開發
再到驗證
特別是客戶端的驗證
然後再回到這個學習就是
修改
就是改善
這個improvement
或者是optimization
或者是這個debug
所以
他強調的是一個
這個驗證假設
就是
他不斷的這個
持續的進行驗證
然後快速的這個實驗
還有不斷的這個調整
其實就是這個
這一句話就是反映在
這個build
evaluate跟run it
這個cycle呢
這個盡可能的要快
盡可能要快
我們看到這種精實創業的這種
這種思想呢
他過去十幾年來
深刻的影響了這個軟體的產業
深刻影響軟體產業
當然我想可能整個產業的這種
這個技術的變遷
也有關係
因為九零年代
我們還看不到這種可能性
什麼樣的可能性呢
就是可以快速的這個
更改的這種可能性
各位現在這個
在網路上買一些軟體
或者是這個
就是一些線上的
線上的這個軟體的產業
其實你是看不到這個
軟體在更新
在這個驗證
但是呢
其實如果你是一個下載的這個軟體
你會發現他們
那個尤其在手機上面這些
這些APP
幾乎這個幾天就update一次
他在做什麼
他在做更新
他在做更新
這個以前是做不到的
以前做不到
但是現在你會發現這個後端呢
他隨時在更新
隨時在更新
其實這種思維呢
就是反映了這個
精實創業的這種精神
他要求要快
要求要這個
經常這個持續的去驗證
跟更新
所以呢在
這個針對像軟體這個產業
我們過去
過去十幾年來也都是朝向所謂的
並且開發
並且開發
就是強調這個
快速或是叫做這個
極限開發
或者叫做客戶開發
客戶開發是什麼意思
我想各位有沒有人經歷過
如果你當過這個
這個服務工程師
這個這個support engineering
你可能會比較有這個概念就是說
我這個產品deliver給客戶
那客戶那邊呢
這個這個這個
幾天呢
就回報一次你這個產品有什麼問題
各位想想看
如果這個這個工作呢
是在你實驗室裡面做
那是你自己在開發
因為你自己在debug
你在這個這個這個
這個evaluate
然後你再你再這個
再幫忙做debug
可是呢如果這個工作呢
是在客戶端做
在客戶端做
那客戶端呢
幫你做測試
幫你做驗證
當然他可能沒有辦法幫你做debug
但是呢他找出問題以後呢
再把這些問題呢
回到了這個
這個產品的這個團隊去做修改
這個叫做客戶開發
那精實創業裡面有一個精神
就是這種客戶開發的這個精神
那你說天底下哪有這麼好的事情
那個你隨隨便便寫一個程式
然後就交給客戶
然後接下來看看客戶有什麼問題
有問題我再來看
這聽起來不可思議對不對
這樣子怎麼會有人願意用
用你的產品
如果我用你的產品還要再幫你
還要幫你debug
那那個這個沒有這種道理
那事實上精實創業
他的精神就是如此
因為客戶對於這個
他的需求是最清楚的
所以呢這個如果這是一個
最新的產品
而且是針對客戶開發的這個產品
他們當然是願意使用
而且因為你的這個這個
這個cycle
修改這個cycle非常的快
所以呢他們可以接受
這個他們在幫你這個做
做驗證做測試
那當你把這個產品開發的這個風險
轉嫁到客戶端
當然你自己的風險就降低了
而且你的創業的成功率就提高了
因為很可能你每一天
都有一個版本給客戶
兩三天就有一個版本給客戶
那客戶當然會覺得這個
這個服務是非常好
因為幾乎是在為他在做客製化
這就是以客戶為核心的這種思維
但是我們傳統在
傳統的創業開發一個產品
一定都是要在實驗室裡面
這個打造而且去研磨
想辦法希望把這個所有的這個
這個這個bug把它找出來
或者是我們希望把
所有的功能全部都做完以後
才會點入了點客戶
因為這個表示我們對客戶的一種尊重
但是在高科技這個產業裡面
這個存在的另外一種
並不熟悉的這種客戶的模式
那就是這個他們希望
也能夠在最快而且客製化的方式
為他們提供服務
這是精實創業裡面的比較
這個不同的這種思維
所以我們把這種思維的
這種創業的這個方法
就叫做這個Linstar
前面我們花了這個不少時間
來談精實創業
這個跟一般的這個創業差異在什麼地方
這個差異在於他們的這個
這個cycle非常的這個
非常的快非常的這個時間
非常的短life cycle非常的短
然後他們經常要這個持續的
不斷的在改善他們的產品
他們的產品是給客戶
讓客戶來進行驗證
這是我們比較會覺得
比較陌生的這種創業的模式
好那基於這樣的一個概念
他的方法是什麼
因為我們有這種概念
之後我們一定要有方法
我們才能夠去實現這些概念
就像這個各位寫論文一樣
你提出了一個你要解決的這個問題
然後接下來你一定要提出一個方法
提出方法
否則那就變成空想
那個不是科學
科學一定是要有問題跟方法
然後最後你要有這個能力
去實現這個方法
然後來驗證
你的提出來的這個方法是可行的
然後他可以解決
然後他可以解決你前面提出來的問題
這個就是變成你的一個碩士論文的一個cycle
提出問題提出方法
然後驗證這個方法
然後這個驗證什麼
驗證你的方法是可行的
最後驗證用你的方法來解決這個問題
成立家公司設計一個產品其實也是一樣
所以在精實創業裡面
他的這個核心的方法
就是為了要這個實現他前面提的這些概念
如果我們說這些概念是
就是你論文裡面的問題的話
那麼接下來就是他的方法
第一個方法叫做這個MVP
MVP是這個minimum viable product
就是最小的可用的產品
或者是最小可行的這個產品
這個中文翻譯我忘了到底翻什麼
不過MVP呢
大家這個字大家很熟
不過不是我們看球賽的那個MVP
這個是那個minimum viable product
一個最小可用的這個產品是什麼
就是最小的說最小程度的這個符合客戶的要求
如果今天呢
我客戶需要一個這個產品
需要一個某一個功能的產品
這時候你在開發產品的時候呢
你可能會發現我有十個功能
必須要這個加進去
所以你們等這十個功能通通完成之後再交給客戶
可是客戶想要驗證的其實只有一個
但是呢你從工程師的角度來看
你必須要十個都要有那才是完整
譬如說這個你總要有開檔跟關檔的這個功能吧
如果你今天要做任何一個處理
所以你會自動把開檔關檔加上去
那檔案的大小這個你要不要去調整螢幕
譬如說你要開啟一張照片
那開啟這張照片你就會再加上一個功能
如果你的螢幕大你就把照片放大
如果螢幕小你這張照片就縮小
問題是客戶他第一時間沒有想到這些功能
所以所謂的最小可用產品就是
你就把這個客戶的這個需求設計的剛剛好就好
不用再去做其他的
那這個叫做最小可用產品
就是剛好就是客戶要的就好
當然你會說這個不完整
這個很不方便
這個不是一個那個那個成菜的
可是在精實創業裡面呢
他的目的就是為了要快
快不是為了只是為了要那個做出產品而已
快還包括他希望能夠快速的驗證這個假證
還有獲取客戶的這個回饋
這個驗證假設就是說
每一個產品其實都是一個
對於一個可能性的一種這個假設的解決方案
就是說我們這個之所以要設計一個這個
120個frame的這個這個這個快速響應的這種螢幕
那是因為我們假設那一些看影片的人
或是玩遊戲的人
他需要一個這麼快的螢幕更新頻率的這種
這種這個這種這個這種display
這是一個假設
因為當他產品沒有出來之前
這當然就是假設
所以呢為了要快速驗證這個假設呢
我們就先把這個MVP的這個產品呢
就先這個deliver給客戶
讓客戶來判斷來評估來驗證這個假設是不是對
如果客戶呢他看60個frame的這個
這種螢幕跟看120個frame的螢幕
根本沒有差別
那這個假設呢就當然我們就知道他的神秘
如果說客戶覺得120個frame就是確實就是他想要
因為這個看影片覺得很流暢
或者是玩遊戲覺得這個這個螢幕沒有沒有延遲
這個就是快速的驗證假設
而且呢我們可以獲得這個
在最短的時間裡面獲得這個客戶的這個回饋的意見
這個回饋的意見呢就是用來這個作為
這個第二版的這個產品的這個修改
因為使用這個MVP
MVP去開發產品
所以我們有機會在最短的時間裡面呢
立刻推這個推出第二版
立刻推出第二版
第二版呢又很快的這個送到客戶
客戶端
客戶端呢使用之後呢又有回饋意見
那就是第三版
所以呢他就可以推動這個最這種最小可用產品的設計呢
就可以推動這個這個創業呢
他的這個這個腳步就會非常快
就是我剛剛講的
這個我們今天呢在手機上面的APP
有些有些APP呢幾天就就就update一次
幾天update一次
這個都是在做這個使用家的一個最小可用產品的開發
第二點呢第二種方法叫做快速的學習
快速學習呢
這個他是透過這個客戶端的驗證
這個驗證當然也是實驗
就是說我們做出一個MVP出來
然後立刻就給客戶
這個就是在實驗這個這個MVP是不是可以符合我們的需求
那這個如果說這個客戶呢有一些這個意見呢
這個覺得你的這個這個功能不夠完整
比如說為什麼沒有這個存檔的功能
那這個就是一個這個這個這個這個客戶回饋的這種資訊
我們就可以把這個回饋的資訊呢
就加入到下一版的這個修改的這個這個這個參考
這個叫做學習
所以快速學習呢也是便利在這個這個cycle
這個非常短的這個這個life cycle裡面
所以快速學習呢當然跟MVP也有關
如果你不用MVP去設計產品
你就沒有辦法去這個做到快速學習
那第三點呢就是用戶驅動的這種開發
這個概念呢就是讓客戶去這個
這個叫做customer的這個driven
driven就是以customer為驅動力的這種產品的開發
所以呢這個意思是說你要這個充分的
要這個跟你的這個target的客戶跟他們互動
跟他們互動呢你才能夠了解這個產品呢
這個在下一個cycle要往哪個方向去做修改
那所以這個是產品然後流程然後客戶
這是這三個這個這這這三個這個目標
利用這樣的一個這些方法呢
我們就可以實現前面的這些這些概念
這些概念的驗證就是建造這個驗證跟學習
然後持續的這個驗證假設
這個假設就是每一個新的產品新的技術都是假設
因為我們不知道客戶是不是能夠接受
市場能不能接受所以當初是假設
那要驗證這個假設絕對不是工程師的工作
工程師沒有能力去驗證這個假設
工程師可以想像說120個frame一定比60個frame要好
所以呢那當然是當然是更好的產品
但是從客戶從市場的角度就不見得是如此
那從這個
Re-Startup這個這個角度我們來看這個創業的這個這個procedure
首先呢我們先有一個創業的這個構想
然後接著呢有創業計畫書
這創業計畫書呢這個完成之後呢
每個人就順利的取得了這個這個資金
然後開始從事這個產品的開發
那這產品的這個開發呢
有αβ這個這個測試的階段
然後最後呢就是shipment就產品上市
一般典型的這個這個創業是是如此
所以
在這個我們沒有這個沒有使用Re-Startup的時候呢
我們可能要花很多時間去做這個business plan
然後呢我們要花很多時間去做這個產品的開發
那一般呢你如果去一些天使創投
一般會給你這個
譬如說兩年的時間讓你來做這個這個開發
產品的開發呢這個它一定要經過測試
這個測試呢當然是在實驗室內部
所以我們有αβ
甚至我不曉得有沒有γ
總之呢這個測試的這個時間很長
有時候呢測試之後呢又回到了這個產品開發
然後再進到這個產品測試再回到產品開發
那這個這個cycle呢是在實驗室內部的這個這個cycle
這個實驗室內部的cycle
我現在講的是傳統的這個創業這個情緒
所以呢我們的時間都在都在這邊
等到最後沒有問題以後呢我們才上市
沒有問題才上市
所以這個在這裡呢我們都在這個cycle裡面呢
我們是完全沒有客戶的這種回饋
完全沒有
那在客戶端呢
客戶端的這個開發
這時候又是那個行銷跟業務的工作
我們剛剛這邊是產品開發
這是研發工程師跟產品工程師的這個工作
這邊呢這個客戶開發呢
是先找客戶
然後確認客戶的這個這個需求
願意這個下訂單
這個或是試用
然後呢這個如果這個這個
這個客戶沒有這個最後沒有下訂單
那有再找新的客戶
如果他very dead
very dead就是確認這個這個這個下訂單
那我們就就就所謂的customer creation
就是他確認的就是公司的這個這個顧客
然後最後呢這個這個公司呢
就可以順利的這個運作
那一般來說這個是純business
這個是這個純工程
所以一般公司呢就分開來這個是那個
這個是行銷業務
這個是這個這個研發
但是在Linstarup裡面呢
其實它是三個是混在一起
它沒有切割這個產品開發跟
客戶的就是客戶開發
客戶開發跟產品開發
在這個金石創業裡面呢
它是一起
怎麼樣的一起呢
它都在這個都在這個cycle裡面
這個cycle
這個cycle呢
我們從這個Build這邊開始
當然我們要設計一個產品
這個產品出來呢
到這個這個這個客戶端去做這個major
這個客戶端做哪些事情呢
去測試這個產品的這個假設
這個產品假設
不管是功能的假設
或者是性能的假設
那有哪一些呢
第一個這個line weight test
line weight test相對於
這個我們對於產品的這種
coverage的這個test
就是覆蓋率
它可能就是只測試一兩個簡單的功能
這種叫line weight test
然後它是不是這個可用性
這個usability可用性
這個是不是這個方便
然後再來這個
real time monitoring
就是我要隨時要這個了解到這個
目前這個產品的這個狀態
這在軟體產業呢
這比較比較明顯
在一些純硬體的這個產業
也許不見得實際的
適合
因為就軟體產業
你可以做real time monitoring
那這個部分呢
都是屬於驗證
因為major就是去測量
測量這個監控
或者是驗證或者是測試
那這些呢
這些工作是在客戶端
那客戶端呢
他的major完成之後呢
他當然會給你一些回饋
那這些回饋呢
我們就要去想辦法去解決
這個這些問題
如果量出來呢
這個功能的這個測試失敗
如果量出來呢
他性能不如這個原先的預期
如果呢
他在使用過程當中
發現了有一些他原先沒有想到的
那這些呢
都是major的結果
所以呢
我們接下來的這個這個
下一個工作呢
就是要去這個解決這些問題
去改善這些問題
那這個就是論
我們從這個客戶的這個回饋意見當中呢
去學習怎麼樣去
怎麼樣去這個進步改善這個這個場面
所以這些改善的這個方案
或是解決問題的這個方法呢
就會變成了一個構想
這個構想呢
又來到了這個這個這個build這邊
又重新開發
所以學習我們要學習什麼
右上角這邊呢
這個列了一些一些影片
我們要學習的這個這個knowledge
包括這個他們這個客戶
這個想要什麼
然後呢
這個客戶的這個
想要的這個對於這個產品的這個假說是什麼
他們的假說
然後最後呢就是那個MVP的這個產品的構想
那MVP呢
是一直都是MVP
就是說
最小的這個可以滿足客戶的這一種產品的這個規格叫做MVP
所以可能一開始客戶並不清楚
他真正想要的是什麼
我們上一次談到這個福特這個車子
他說在汽車發明之前
你就問客戶說你想要什麼樣的車
他說他想要的是那種
這個不用這個這個吃草吃人少
但是又可以跑很快的嘛
就對客戶來說呢
他並不知道未來是什麼
未來他想要什麼
所以我們才會說這個是這個假設
這是一個假設
產品呢就是一種假設
創新產品是一種假設
除非你要設計的這個產品
就是跟現有的產品一模一樣
他一定是假設
一定是假設
所以我們在這裡呢
這個這個這個了解的
客戶的想法之後呢
我們再提出一些構想
這些構想就是要用來改善這個產品
所以這個叫做interact
所以其實這是一個迭代的這個這個過程
不斷的這個迭代
那在軟體的產業裡面
我們叫做免結團隊的開發
免結開發這個agile
那這個開發的過程當中呢
我們需要這個快速
這個快速的這個設計
快速的這個deliver
快速的deliver
快速的deploy
然後持續的deliver
持續的deliver
這個是這個就是非常關鍵
因為沒有一個創業的這個方法
都是告訴我們要做這個continuous deliver
就是說你要不斷的deliver這個產品給客戶
這個不斷的deliver意思就是
這個cycle呢一次兩次三次
這樣子一直重複的deliver這個產品
好這個是在精實創業的裡面
這個方法論裡面
最重要的一個這個叫做cycle
一個叫做linestart cycle
好那剛剛呢我們談linestart這個
這個處理
剛剛談了這個linestart這個概念
談了linestart的方法
然後呢我們來這個看看工具
那這個工具呢
大概第一個就是
我剛剛一開始跟各位講的
那個每個人都要都要這個畫這個canvas
當作你們自己的一個這個練習
那這個之前呢我都會叫同學
那個先那個那個
把這個linencanvas當作一個作業
那
不過我們先那個
因為有些同學還沒有分組的
還沒有找好題目的這些
所以我就沒有那麼快要求
各位要做這件事
不過那個接下來呢
我會請大家去畫這個
你的bisBis model這個這個假設
linencanvas
canvas大家都知道就是一張一張圖表
那你把你的創業的構想
創業的構想這個畫出來
我們就說這個你畫的是一個這個
你畫的是一個這個
應該說你的bisBis model
你的商業模式商業模式
所以創業計畫裡面內容當然很多
但是最重要的
整個創業計畫裡面最重要的就是
就是商業模式
你的bisBis model是什麼
因為bisBis model呢
就是你這個如何這個賺錢
如何獲利的關鍵
如果沒有bisBis model
這個就不能叫做創業計畫
而你的bisBis model要怎麼呈現呢
bisBis model非常多
每一種每一個行業
甚至每一個產品都有他自己的
這個bisBis model
所以你可以說我在網路上開發了一個軟體
讓人家下載每一次下載收多少錢
這是一種bisBis model
你在這個夜市擺攤
你賣炸雞
你賣炸雞一份炸雞你賺多少錢
這就是你的bisBis model
這是你應該說你的獲利的這個模式
這個獲利模式當然就是bisBis model裡面最重要的部分
你要擺攤你需要住一個攤位
你要錢
你的這個人事費
其實你自己一個人
你也是要付薪水
你要買材料要錢
這些都是你的這個成本
然後你賣出一份炸雞多少錢
一個晚上可以賣多少
一個月可以賣多少
這個就是你的bisBis model
所以我們用LangCampus去呈現你的創業概念
主要要呈現的是你的bisBis model
這是我們待會兒會再繼續來討論
另外一個是客戶的開發
客戶的開發就是主要就是要讓客戶來驗證產品的假說
我們藉由客戶驗證產品假說
我們才能夠進一步的學習
然後改善這個產品
第三個工具就是去建造這個產品
就是AminiMovial Product這個產品
建造最小的可用的產品
當你的產品越精簡越小功能越簡單
你的學習的速度就會越快
當你學習的速度越快
你的產品的被客戶接收度就越高
所以我們可以把這個稱作是三個conceptual的工具
這就是LangCampus
各位可以用Excel或Visual把這些軟體來畫這個Campus
如果需要的話我會畫一個表格給大家做參考
這是一個Campus
這個Campus是一頁呈現整個創業藍圖
但是這個創業藍圖要特別著重在商業模式上面
我們就來看這九個藍位要填什麼
第一個是你的Key partnership
你的partner是哪一些
不管是創業夥伴
或者是你的供應商
代理商
代工廠
這個都可以是你的partner
或者是你的投資者
相關的這些公司
如果你今天說Apple是我的投資者
比爾蓋茲是我的投資者
這些單位都是你的Key partnership
或者是紅海
我的產品會交給紅海代工
所以紅海是你的partner
你的創業團隊是誰誰誰
他們分別擔任過哪一些公司的CEO
或者是擔任過什麼業務主管
這個是你的partner
再來就是你這個公司要做什麼
Key activity
然後再來是你的Key resources
你公司有什麼樣的資源
這個資源當然包括人力、財務、資金、技術
這些都是你的資源
所以你要做什麼樣的這個事情
你的創業活動是誰
再來是有一個叫做value proposition
這是你的創業主要的
就是成立這家公司你的價值在什麼地方
譬如說你要解決什麼樣的問題
假設你今天想要成立一家公司
做這種非進入式的雪堂的測量
這就是因為現在糖尿病患者要抽血非常痛苦
全台可能有幾百萬的需要抽血檢查
這種慢性病的糖尿病患者
所以你成立的這家公司要推出的產品就是為了解決這個問題
所以這就是你的這個value proposition
有多少人會採用你的產品
你可以改善什麼樣的情形
可以改善病人的痛苦
或者是節省人家的時間
或者是可以幫公司節省多少成本
或增加多少成量
這個都是value proposition
那你的客戶關係
就是你怎麼跟這個
應該說先談你的這個target custom
你的客戶是誰
他們為什麼要用你的產品
這個要談你的客戶關係
意思就是說你這個東西做出來是會有人會買單的
然後你的這個通道這個channel是你怎麼賣你的產品
那你可以說網路這個一些這個臉書Line Twitter
或者現在的Youtube
透過這些這個管道這是一種channel
你可以透過經銷商代理商
或者是直營文士
這些這個也是這個channel
或者說你可以透過這個就是說你這個有專門的這個營銷公司
專門做這個營銷公司
那你只負責研發製造
當然這個營銷公司也是你的這個channel
這個具體的channel是哪一個
譬如說你的東西會放在這個Amazon上面賣
還是說你在Shopping上面賣
這個就是你的channel
還有就是你的這個產品的customer segment
那這個部分可能就是這個
在畫這張圖裡面可能要仔細再多想多想一想
就是說如果你今天要做出一個這個產品是所有的人都可以用
那你這個產品我相信沒有一個投資者會對你產生侵賴
一個產品即使全世界的人都會用到
你也要做市場的區隔
我上次特別講了一個故事
就是IBM的雷射音表機
你今天不管是中小企業
不管是售貨族還是大公司
都需要用到雷射音表機
對不對
所以你在這邊不能寫說
從小公司從中小企業收貨
大公司通通都需要
所以你現在要做的就是
你現在要做的就是
所以IBM把customer segment區分成收貨族跟中小企業
所以它的這個產品的區隔
就是你現在要做的就是
你現在要做的就是
你現在要做的就是
你現在要做的就是
你現在要做的就是
你現在要做的就是
所以它的收貨族賣500塊美金
在中小企業賣1000塊美金
但是那又不能一模一樣
所以它就把其中的一排
把它的速度就調慢
一分鐘驗食五月
它就把它放在一分鐘驗食五月就好
那這樣子因為市場區隔的年度
所以它的產品在兩種市場
一種是收貨族的市場
一種是中小企業市場都賣得很好
所以一個產品你一定要有市場的區隔性
那如果你的產品可以賣給這些糖尿病患者
你當然也可以賣給所有的老人
甚至你也可以賣給小孩
這個當然也是大人賣單的
但是你這個市場一定要有區隔
這個區隔就是Condom這個區隔
那最後這兩個是跟錢有關
然後你的這個成本
還有你的Revenue
你的這個成本跟你的獲利
跟你的收入
所以成本就是把你的一次性的成本寫出來
然後你的這個單位成本
這個產品的單位成本這個列出來
這樣子我們就可以估測真實的成本
就是說你今天做這個十萬個產品
跟你做一百萬個這個產品
這個成本都可以精確的這個算出來
那Revenue就是你的這個收入從什麼地方來
收入從什麼地方來
譬如說你可以就直接賣成品
每個產品賣多少這個收入多少
你也可以租用這個產品
如果你今天做的是一台這個七八十萬的這個機器人
那你大概可以預期這個產品一定賣得不好
因為買得起的人很少
我這個是之前那個日本版原的那個Paper
它是八十幾萬
它其實最早我在很多年前十幾年前
那時候就注意到在歐洲做這種機器人
做得最好的那家公司
那家公司的那個教授手
但是那很貴那一台八十幾萬
那時候我曾經想要讓我的那個那個我寫信
讓我的學生去那家公司去實習
教育部有補助那個碩士生可以到到國外去做短期的那個研究
實習我寫信給那家公司
那家公司就直接打電話給我
他說如果你們來我們十台這個機器人
我們就接受你們的那個那個學生來我們公司實習
一台機器人是這個這個八十幾萬
我說我沒有錢了沒那麼多錢去買你們的機器人
果然那家公司很快就倒閉了
雖然它是歐洲最好的一家公司
倒閉以後這家公司賣給誰賣給日本的軟銀
後來軟銀把這台機器人重新取一個名字叫做Paper
就繼續賣但是還是賣不好賣
那一台也是八十幾萬
那有軟銀這邊來賣
最後呢就是他的商業模式就是豬用
這豬變成用豬的
不用賣因為賣沒有人買
那豬呢其實也很貴
所以我最後只有在幾個國務館還有機場
有看到那個那個Paper的短暫的出來這樣報一圈
那就回去
所以這個Revenue就是說
跟你的那個Business Model有關
如果你要用賣的這是一個Revenue
那你預估一年可以賣一百台
所以你的收入有多少
或者是你可以用豬的
豬的的話一個月多少錢
然後一年下來多少錢
你總共豬給多少個單位
那你可以算出他的這個收入
或者是還有一種商業模式
你可以用授權的
你把這個這台機器人的那個核心技術
授權給其他機器人的公司
讓其他機器人的公司
用你的這個這個這個技術的核心
去發展他們自己的產品
那這個授權費也是一個收入
授權費呢
比如說現在國內的那些這個IC設計公司
經常需要
因為一個IC是有很多的這個IP所組成的
那這些IP呢
有些人是用買的
就是把這個把整個IP買下來
比如說USB的那個IP
Type-C的這個IP
HDMI的IP
那有些IP呢
IP呢
比如說我一個IP賣給你是這個500萬
那他是一次性的費用
但是你買了以後呢
你去做成產品
做成晶片
你把你把比如說把那個Type-C
這一顆IP呢
做成放在你的晶片裡面
你每賣出一顆這個晶片呢
你就要付那個原廠
比如說0.1塊美金
這個叫做這個license fee
叫做權利金
那一般來說在IC設計產業裡面
他們這個透過這種方式呢
經常這個這個甚至
有可能會變成他們主要的這個level
都有可能
比如說這個
華為有這個這個上千個這個5G的這個專利
這5G的專利呢
那你要做這個做那個5G的晶片
5G的手機呢
你就會這個這個用到5G的這個技術
這裡面難免有一些是華為的這個專利
這時候呢
你可能就不需要這個
需要授權
要不然你就就就清權
那授權呢
這個第一個要有授權金
第二個要有這個這個license fee
要有license fee
那這兩個呢
反過來就是說
華為來說這個就他了
因為他現在也不能賣手機
所以只能賣這些手機的這個這個專利
用這個來支撐他的這個這個這個level
所以有些人會奇怪說
華為就是不能賣手機了
為什麼
還能夠存活
因為他就可以透過他的這個
專利的授權
跟收取這個每一個產品的這個權利金
就可以那個讓他有足夠的這個
這個其實
這個這種商業模式呢
在美國的公司是環得最如火純青
所以這也導致了為什麼在
90年代之後呢
就是2000年之後
台灣的這些科技公司呢
都在拼命申請專利
因為他們確實是這個這個覺得
付太多錢給這些公司
像
不管是Apple或是這個這個
這個Codecom這些這些公司
因為他們除了賣你晶片之外
他們還有一大一大部分的這個收入
都是來自授權金
都來自授權金
所以商業模式呢
這邊呢可以先先先先先想一想
各位在寫我們的這個
營運商業這個這個商業模式
或是那個創業計畫書的時候
就這個這個不要說
只是想到說我一個可以賣多少錢
不會想想可能商業模式有很多種
不一定是只有一種
我就是賣一個賣多少錢賣多少
就算當然大部分公司也許真的
這個這個收入是來自這個
不過呢既然你今天呢要去
要這個要創業
要這個去想商業模式
你可以多考慮一下
這個商業模式有哪一些
我建議各位網路上先找找看
看有哪一些商業模式
讓你的創業計畫裡面呢
又可能可以採用
哪幾種商業模式
那每一種商業模式呢
你先評估一下
看看他的revenue是多少
那你去選擇一個這個這個
這個收益最大的最大的可能性
當然還沒有發生的
我們也不曉得
但是呢這個revenue的可能
可以來自很多地方
但是cost這個相對的就比較單純
cost你花出去的錢
你花出去的錢那個叫cost
所以這個都比較容易
但是你想賺的錢呢
他的管道就比較多元
所以我今天看過一本書
叫做商業模式
裡面有幾百種商業模式
那各位在這個
在畫這個link canvas的這個之前呢
我建議各位可以找找一些
找一些那個其他人畫的link canvas
也許會給你比較
比較具體的這個想法
這個是中文版的這個link canvas
我們再來再看一下
我們剛看的是英文的一些看看中文
第一個是你的這個關鍵的模板
供應商這個你的這個代理商
銷商你的投資者
這個都是你的投資模板
代工廠也是
然後你的這個這個clean activity
要做哪一些事情
當然產品開發銷售這些
這些一定是有的
但是你要針對你的產品開發
譬如說你現在做一顆晶片
開一顆晶片
那這顆晶片呢你要做什麼
譬如說你要做這個
這個先做完你的驗證
驗證這個這個今天的開發
然後去做晶
去去去開開ASIC
然後去驗證
然後要交給哪些廠商去測試等等
這些是你要做的事情
那你有什麼資源
你有資金
你有人
你有這個技術
然後呢這個這個這個
value proposition
剛剛提過是value proposition
你這個你這個為客戶
為市場
或是為這個社會
這個解決什麼樣的問題
當然如果你已經有了這個target
客戶
譬如說你的目標呢
就是把你的這個產品賣給這些這個半導體廠
那麼這個你一定是為
可以你的產品一定是可以為
半導體廠商解決什麼樣的問題
譬如說可以提高他們的量率
還是縮短他們的這個這個這個
這個這個產品的這個上市的時間
或者是可以把他們的這個設備呢
可以把他連結這個這個連結起來
總之呢就是
一定是解決客戶的問題
這個是解決客戶的問題
然後如何以客戶建立關係
這個客戶呢
這個大部分的商業的書都會說
你這個與其你花很多的這個心力
去這個開發新的這個客戶
還不如這個這個這個
花少量的這個時間
去維持跟你的舊客戶的這個關係
他說這個通常是這個最成功的
最能夠帶來穩定的
收益的這種這個客戶關係的經歷
所以為如何跟客戶建立這個關係
你的通路
通路就是從你的產品要賣到這個市場上
他的這個管道有哪一些
管道
那現在這個網路是一個
這個非常這個
甚至是這個在很多產品上面
它是一個最主要的這個管道
我曾經這個
有一個這個企業家朋友
他說他們以前這個他們的廣告
公司的一些商店的這個廣告
都是刊登在這個什麼零組件
或者是這一類的這種雜誌
那這個兩年前
他說他們刊登在雜誌上面的這個
這種廣告已經沒有人看了
已經沒有人看了
他說那個刊登以後一個月
好像只有兩個
只有只接到兩通電話
但是他們在網路上面
這個這個觸及的這個客戶
這個遠遠超過這個兩個人
到底多少個我也不曉得
不過他說這個
這個目前那種紙本的這種雜誌
已經沒有人在看了
這個是通路
那目標目標這個
就是客戶的這個區隔
主要的客戶是誰
如果你今天這個針對半導體廠
那你一定有一些半導體廠的客戶
你針對CNC的這個廠商
CNC的這個客戶
如果你今天做消費經驗的場面
那你可能針對這個小孩
針對女性針對年輕的這個這個族群
或者是針對這個老人
針對這個這個某一個職業的這種這種客群
最後成本結構跟這個這個獲利行
跟收入
是是那個如何去規劃
我們再把這個再細分
把這個Linkedbox再細分
你的合作夥伴要寫什麼
寫你的這個這些顧問商策略聯盟
投資子代工廠這些
主要的這個營運的這個這個這個活動
你要怎麼去設計跟製造這個產品
怎麼樣提供服務
然後你要在哪一些平台上面去做宣傳
這些都是你的Activity
就是跟你的這個創業的這個活動
就是你真正要從事的這個活動相關的事情
如果你是一個這個高科技公司
那這個Activity主要會是在研發上面
就是R&D上面
這個Value Proposition參與量非常的多
那這個各位各位自己去看就好
這個這個這個很多
就是說你可以為客戶拜來什麼樣的價值
那客戶的關係
演列了很多這個各種那個客戶的關係的經驗
然後再來是通路
客戶的這個族群
就是還有這個客戶的區隔
還有你的這個成本的這個結構
成本的結構呢
如果你在去細分
還有很多這個各位自己看
收入呢產品這個
產品的銷售
使用者付費
然後訂閱的費用
租賃的費用
授權的費用
還有這個其他經濟啊廣告
這些都要等到公司規模大到一個程度
有品牌效應
效應之後才會有
好我們先休息一下喝個水再回來
介紹那個Linked Marks的一些詳細的這個說明
那個包括Customer這個Send的這個說明
各位可以去把這些意見來寫
主要這個Segment就是要這個區隔
你的這個產品
跟這個產品在市場的這個客戶
把他們做分類
分類之後呢
在分類有很多好處
包括你可以做這個個別化的這個行銷
尤其在這個這個這個AI
已經開始在幫我們撰寫這種那個文案的時候
這個區隔的這種
客群的這個區隔
就非常的這個重要
因為AI最擅長的最適合就是就是這一點
各位可以可以這樣的設想
譬如說你今天有一千個客戶
這一千個客戶呢
如果你想要寫一封信給他們
這個傳統的寫法是什麼
寫一封標準的信
然後這個把那個名字換掉
但是每個人收到的信都會覺得這個四平八穩
但是反正不是為我寫的
那如果你要一封一封寫
非常非常累啊
一千一千個也許還還好
如果你是一萬個客戶
那就不得了
所以AI呢
他做這種事情
他可以根據每個人的這個每個人的消費行為
每個人的這個消費的頻率
每個人消費的這個金額
他可以這個寫一封不同的信
這個你把客戶的這個資料
這個這個輸入
那個一個一個一個一個list
然後呢
他可以寫一千封信
一千封信都不一樣
這是AI的這個帶給大家好處
如果今天才跟一家這個
做行銷的這個公司
在談
在跟我談那個AI用在他們的這個
一些這個這個行銷的專案上面
就剛好聊到這一點
我說那個個性化
或者叫做personalize
這個是這個AI
AI在行銷上面大概最大的一個這個變革
那你在做這個
在用AI做這種這個個性化的
個別化的這個行銷的時候
就必須要牽涉到
你要怎麼去做custom segment
custom segment
如果你的目標是針對教育市場
那教育市場呢你針對小孩
針對老師針對家長
寫的三封信一定是不一樣的
這個就叫做custom segment
那這個對行銷是如此
對產品的設計也是如此
你產品這個從這個
從市場的訊息
或者從你的這個
這個run
這個就是你的build
major run
這個run的這個階段
產生出來的這些解決問題的方案
然後要進行設計
這個也是針對這個你的目標客群
所以目標客群的這個概念是這樣子
那你的這個價值的這個主張
因為你主要是要解決客戶的問題
所以你最好的方式是從
客戶的這個角度來思考
那客戶的角度呢
他希望節省這個成本
他希望節省能力
他希望能夠這個增加他的效能
他希望能夠這個提升他的品牌的地位
他希望這個價格可以更低
他希望風險可以降低
等等
就是說你的這個value是在什麼地方
你今天這個研發區的這個技術
設計的這個產品
你一定有一個這個
你的最值得你這個
去推銷的這種這種value
那通路呢
如果你今天做的是一個存滿體
在網路上讓人下載
這個通路非常簡單
然後就是就直接這個這個網路
然後跟客戶這邊的這個步驟
都是在那個 cyber的空間裡面做
但是如果你是有這個實體的這個這個產品
那你可能就要考慮到這個不同的這個通路
這些這些通路呢
直接到這個客戶端
到他的工廠到他的這個到醫院
到這個社區到學校
這個或者是透過這個中間商
那中間商呢
這個如果他願意去這個銷售
甚至是帶領你的產品
那就這個就是你的合作的這個partner
那客戶的這個關係呢
在這個AI的時代的這個這種關係
也開始改變了
現在很多的這個
很多的客戶關係呢
可以介於有這個
譬如說一些對話機器人
這個可以維繫這個公司跟客戶之間的這個關係
這也是一個這個方先未艾的一個這個這個技術的趨勢
那是從這個這個以前的這個Line的這個LineBud
到現在幾乎每一家線上的這個服務公司
都有一個這個線上的這個對話機器人
可以讓你的公司的這個這個建立起關係
不過當然也有一些這個設計的不好
不管是技術上面不好還是服務模式不好
所以即使有這個這個對話機器人
但是你還是還是覺得這個甚至覺得更麻煩
這個講了老半天然後什麼也沒也沒什麼問題也沒解決
這個前幾天我才經歷過一個一個這種這個線上的對話機器人
特別是一些這國營單位的這種網站的那個對話機器人
然後那個設計的就會氣死人
那個千萬不要去不要去嘗試
那我不曉得他們是招標給那些最差的軟體廠商
去幫他們做的這個對話機器人
還是說他們這個公務人員在設計這些對話機器人
都是這個敷衍了事
不曉得什麼原因
但是總之呢幾次那個我用過這個對話機器人都糟糕了
一般民間的公司這種對話機器人大概都還不錯用過幾個
但是我覺得離我期待的還有一段空間
如果這個在座的各位有人想要做這個對話機器人去做
特別是做Custom Relationship的這種對話機器人
可以跟我聊一聊我會給大家一些意見
我剛才特別談這個市場區隔
客戶的區隔跟這個客戶關係
這些都是這個AI會影響到這個創業的活動
所以我希望各位可以把這些元素
就是AI的元素可以把它放到一個創業計畫
這樣子你的創業計畫會它的雷劍度會更高
那Revenue剛才我們談過了這個很多
主要就是銷售就是產品的銷售
另外使用費、授權費、會員費、租賃費這些
都是可以納入你的這個Revenue的項目
你的這個關鍵的資源、設備、技術、能力
有時候一個創業計畫裡面
會把創業團隊的一些非常顯赫的經歷會放到裡面
就是為了要呈現說我有這些資源
人力絕對是一個值得去誇耀的一種資源
當然你擁有哪一些技術、你有什麼專利
你過去做過什麼事這些都是資源
那不要把這個負債當作資源
我上次講說有一些其實是負債不是資源的
譬如說你申請了很多專利
但是當然這個從數量上面來看
專利絕對是一個這個資源
但是你要講那是有用的專利
那才是資源
沒用的專利那就變成負債
那就變成負債而不是資產
財務就是這個沒有錢
另外還有一個就是外部的網路資源
譬如說我的這個專利活動裡面
我會跟誰誰誰
或是我跟某個醫院合作
我跟某個學校合作
或是我跟某一家大企業合作
那這種合作的這種關係
都是有可能的
或是說你的這個臉書有多少個成員
或是你的社團或是你的粉絲專頁
有多少會員
這些都是有可能的
那你現在的這個專利
你現在的這個專利
你現在的這個專利
你現在的這個專利
這些都可以算是在這個資源裡面
那你的activity當然就是
創業的這個活動這個你就可以跳過
你的這個關鍵的這個合作夥伴
這些我們剛剛都談過了
我們從另外一個這個角度來講
一個是這個我們把這個
分成兩個部分的話
一個部分是跟公司相關的
左半邊是跟公司
右半邊是跟市場相關的
所以我們看到這個市場端
我們談價值又談客戶
我們談價值又談客戶
我們談客戶的這個需求
我們要如何解決客戶的問題
這是對外的
顧客關係當然是對外
通路是對外
目標跟客群就是你的customer是外面
你的收益就是從外面來的
所以右半邊是外面的
左半邊是裡面跟公司相關的
所以我們把左半邊可以考慮到
創業的這個內部的這個這些營運
譬如說你的合作夥伴是誰
跟你的這個關係
圍繞著你的那些相關的這個關係
公寓商也好
代工廠也好
這些都是你的合作夥伴
跟公司相關
然後你的activity是什麼
你的value是什麼
一半是公司的
一半是外部的
成本當然是公司拿出來的
不管是客戶的這個價值
不管是書上寫的
或者是我過去在育成中心那邊看到的
那些新創的這個公司
大多數這個創業失敗是因為缺乏客戶的失敗
而不是因為產品開發失敗
就是說你產品做出來
但是沒有人買單
那這個原因是什麼
有些認為是它行銷不夠
商業能力不足
有些是認為這個產品太貴
客戶不願意買單
但是這個其實不一定是因為
太貴了
客戶不願意買單
但是這個其實關鍵的因素就是
沒有客戶
我這邊講的客戶當然是願意買單
哪些人哪些公司願意買你的這個產品
那是最關鍵的問題
所以一個創業計畫書
這個拿出來我們最想要知道的
不是你有什麼技術
而是你如何獲利
就是所謂的商業模式
那為什麼LinkedMask這麼重要
因為LinkedMask就是你的商業模式
所以這個因為缺乏客戶
缺乏客戶有很多的可能性
因為我們剛剛在分析這個LinkedMask的時候
各位想想看這個從這邊開始
這個外部的因素
你的價值主張就是要解決客戶的什麼問題
所以你一定有一個這個心目中的目標的客戶
你才有這個價值主張
然後你要怎麼去經營這種客戶的關係
你要用什麼方式把你的產品賣給客戶
最後你的客戶要怎麼去做這個Send
怎麼去做區隔
怎麼樣從客戶那邊拿到錢
全部都跟客戶有關
所以你一旦沒有客戶
沒有客戶
這個新創公司就是非倒不可
一定會失敗
所以這個客戶的開發非常重要
在LinkedMask裡面
客戶的開發有幾個重點
他把這四個這個步驟
一樣跟剛才一樣傳統的客戶開發的方法
Custom Discovery
Custom Validation
Custom Creation
最後Company Building
這裡有一個
他把前面這兩個步驟叫做Search
後面這兩個步驟叫做Execute
這裡有一個關鍵的字眼出來
叫做Python
還有一個叫做轉向
也就是說
我們今天去找這些客戶
然後請他們去Validate我們的產品
萬一這些客戶不滿意怎麼辦
萬一不滿意怎麼辦
傳統的做法就繼續讓那些滿意的繼續往下
所以這時候你的客戶就縮小了
因為很可能絕大多數
甚至沒有一個客戶滿意
這時候你的產品就失敗了
但是在LinkedMask裡面
他不是一路往下走
他到這邊如果Custom Validation沒有成功
他就繼續轉向Python
也就是說他重新再去Discover
那些新的方向
再去找新的
新的什麼呢
也許是在同樣的客戶裡面
再去Discover
新的需求新的問題
因為如果說他對原本的不滿意
他應該要用其他的
他期待的這種產品或者服務
所以Hyper對創業者來說
就是去轉到客戶願意買單的方向上面
所以在LinkedMask這邊列了三點
第一個
在你最後在做對之前
你需要做很多次的Try and Error
Try and Error回到剛剛說的
"Build, Major跟Learn這個cycle裡面"
就是要做很多次
很多次之後你才會找到一個對的方向
找到對的方向以後
客戶就會Write in Depth
接下來就會Creation
然後你的公司就可以正式的運作
所以LinkedMask假設你會失敗很多次
這裡講的失敗是指
"可能你在Build, Major跟Learn這個過程"
要重複很多次
每一次都是一次Try and Error
傳統的公司是禁不起Try and Error
因為你跑完一次
大概錢就燒完了
然後就結束了
因為你不夠快
所以他強調的是
要夠快
"就是Build, Major,Learn這個cycle"
要縮短時間
縮短時間可以在燒完之前
就沒做過好幾回Try and Error
所以失敗就是常態
在這個cycle裡面
每一次Validate失敗
然後再轉向
再Validate一次
再失敗再轉向
"這個對應在Build, Major,Learn這個cycle裡面"
只是這邊面對的是客戶
這張圖面也是客戶
所以最後願意接受
這個就進入到正式的Customer
只要他願意下訂單
願意買你的東西
他就Customer
那就進入到下一個階段
所以裡面有一個叫做脫離速度
脫離速度
這個是一個
我們學高中物理的時候
提到了火箭發射
這就是火箭
如果你丟一塊石頭
只要你的速度夠大的話
大到一個脫離速度
那麼這顆石頭就會離開大氣層
然後進入外太空
脫離速度
所以火箭發射必須要足夠的動能
脫離速度是多少也是記得
我忘了地球的脫離速度是多少
總之創業的cycle也有脫離速度
如果你到達不了脫離速度
這顆石頭就會掉下來
這個丟的不夠用力
所以有人說這個月球可能上面
會有以前恐龍的遺跡
這倒不是科幻
這個是科學猜想
為什麼
因為在白鶴基那一次
會心撞到地球
會心撞到地球的規模非常大
所以撞擊的時候產生的力道非常大
動能非常大
所以可能有一些恐龍被撞擊之後
就飛上天空
因為它速度夠快
快到已經到達脫離速度
所以它脫離了地球軌道
進入了外太空
進入外太空以後
又被月球的隱秘吸引
所以掉在月球上
所以你說月球上面
有沒有可能有恐龍的遺跡
也許有
這是科學家的猜想
你如果要脫離這個圈子
這個search這個圈子
進入到escape
你也需要一個脫離速度
這脫離速度就是那個
linked emboss的那個cycle
這個cycle
這個要夠快
動能要夠大
那這裡其實觀念都是一樣
只是用不同的形式來講
search是一個階段
execute是一個階段
所以我們的目標是
要從這個階段
到達一個脫離速度
然後進入到這個階段
這個階段就開始公司的正常運營
另外你有客戶
有產品
有銷售
然後你最後可以形成一個
正常的公司
正常的公司之後
接下來就進入的是
管理的這個階段
那如果你是一個創業家
這時候你就要找專業經理人
來幫你管理這個公司
好 那這個customer discover裡面
當然這邊是一些這個
我們前面談的
就是你強調解決什麼問題
應該說解決客戶的什麼問題
然後你提出一個這個MVP
最強可用產品
然後這個開始這個結果
然後進入到這個下一個階段
就是customer validation
你把你的這個MVP
送給你客戶
讓他們去進行驗證
那如果說這個客戶滿意了
那這個就是你的這個
這個產品符合他的需求
那你的business model
這時候就可以派上用場
就是你怎麼樣這個取得這個收益
不管是用賣的
用租的
用會員用什麼方式
這是你的business model
然後接下來就定義他如何銷售
這個bucketing roadmap
進到下一個階段就開始賣了
那重點在這裡
如果這邊客戶的這個validation
這個沒有實現的話
那這時候就要轉向
Private
那所以這個是要告訴我們說
這個如果不行
那我們就換了
如果失敗了
那我們就轉向
所以一個這個
如果一個這種平時很固執的
很偏執的這種工程師
就覺得我的產品是最好
我的技術最好了
那這個
如果你覺得不好
那是你的問題
那個跟我無關
這種個性的人
不可能轉向
不可能轉向
他的想法
他認為這個顧客太挑剔
這個顧客不好
我再去找其他的顧客
如果是這樣的話
你會不斷的投入資源
然後失敗的這種
會一直重現
因為你並沒有改變
改變什麼
可是呢
你必須要轉向
那我們來看這個
這個MVP
因為剛剛已經講過MVP
我們現在要談的是
MVP的這個產品
到底是什麼樣子
MVP它是一個這個
從創意開始
就是我想要做一個什麼
比如說
我今天想要做一個
這個股票預設系統
那股票預設系統是一個產品
就從這個創意開始
然後你接下來你要設計
你今天要設計一個
這個網路的程式
你要用什麼樣的AI的model
你要怎麼去蒐集資料
這個是
這是你的這個
這個prototype要怎麼做
然後接下來呢
你把這些這個
這個資料蒐集好了
然後AI的model也跑起來了
接下來設計一個使用者界面
接下來你要展示
展示給誰
展示給那些可能的這個customer
那這些customer就開始試用
開始去validate
去validate
或者是test你的這個
你的這個程式
他如果發現你的程式呢
這個幫助很大
讓他可以每天就可以
用你的這個程式去進行這個買賣
而且看起來這個
比他自己的這個
這個這個分析呢
來得更可靠
那當然這個是
這個是順利的這個結果
但是你也有一種情形是
這個他試完以後
就覺得你這個程式
一天用出也沒有
因為你知道了
他通通都知道
那個他想要得到的東西
你又沒辦法給他
所以有可能這個
這個東西對他來說不實用
所以這時候呢
你要有辦法去蒐集到這個資料
就是蒐集到客戶使用的這個資料
不管他滿意的不滿意的
或者是就他就
這個甚至最後就
這個直接就
那個把你的這個這個程式直接刪除了
都有
但是你要能夠蒐集到這些資料
因為這些資料就是你下一次
要做這個bill人的時候的一個
一個重要的這個依據
所以就是說客戶的這些
這個資料使用的這個資料
是作為我們下一個cycle
把重任
學習開始
然後要去build一個新的這個版本的時候
一個參考
那這個當然
我們資料要做分析跟學習
才那個才會進入到下一個
那個下一個版本的這個
這個這個這個build
所以在這個過程裡面
最小可用產品
或是最小可行產品
MVP它就是作為
你的這個build
major跟跟任的
一個不斷疊帶的一個產品的概念
這產品
用最少的時間
最少的成本
然後可以盡可能可以去fit
客戶的這個這個需求
這就是你的產品的價值
這才會有價值
所以不要一開始就把產品設定成
它必須要完整
它必須要功能是這個完整
它必須要性能是最好的
它必須要的是沒有缺點
沒有沒有bug
當你這樣子做的時候
你當你這樣想的時候
它就不是一種run start up
run start up的一種這個概念
所以MVP就是一個最簡單
只要符合最低的這個
功能性能的這個需求
那這個就是一個MVP的產品
最後這是今天最後一頁
最後我比較一下
我們今天談的這個
linstar這種方法
跟傳統的這個創業
它的這個差別
這個可以讓我們
做一個比較之後
比較能夠了解
那麼我們在思維上面
我沒有告訴各位說
linstar arms一定是比較好
不一定
但是它確實是
過去這十幾年來
在創業圈裡面的
這個主流的這個一種方法
那傳統方法你很難說它不好
但是在某些情況下
譬如說在一些這個軟體產業
它非常這個仰賴要快速的
這個回應市場這個需求的時候
它的這個傳統的這種創業模式
它的這個速度是比較沒有辦法
趕上這種客戶的需求
所以我們從幾個方面來看
從這個策略
從這個新產品的這個開發程序
從工程面這三個這個角度來看
在傳統的這個創業上面寫創業計畫書
就是我要求各位要做的
要寫創業計畫書
那創業計畫書裡面
必須要很明確的
你的技術你要怎麼去做實現
就是研發
研發這個最後把它做成產品去銷售
那在這個linstar arms裡面呢
它一樣要寫這個創業計畫書
可是它的創業計畫書
它的創業計畫書很簡單
就是一個lin canvas
就是一頁的那個表
就是lin canvas
因為在那一張表裡面
你完整的呈現了你的這個business model
那另外呢
它這個我們這個implementation這邊呢
是這個實作就是把這個產品研發出來
之後呢這個這個這個就可以來進行銷售
可是呢在linstar arms裡面呢
它強調的是這個假設
因為所有的假設都需要驗證
那這個驗證呢
你有了假設之後
你就把你的MVP交給客戶去做驗證
然後客戶再把這個這個資料再回饋回來
那這個是在策略上面會不一樣的
這個lin canvas強調的商業武士
這個傳統武士強調的是創業計畫書
產品的開發程序呢
是這個customer的開發
客戶的開發
那這個在傳統的這個創業呢
這邊呢是產品的研發跟管理
產品研發跟管理
那其實呢這個新產品它還是要研發
只不過它的驗證呢
是讓那個客戶來驗證
所以呢這個我們叫做customer development
這個是在實驗室內部的這種驗證
所以我們叫做產品的這個管理
所以呢這種這個客戶的開發呢
他是這個離開實驗室的一種
假設的這種測試
但是呢在傳統的這個創業裡面呢
他是一步一步的
從公司的這個技術的研發
到產品的開發
到這個適量產到量產
然後再到deliver
就是這個到market上面
他是一步一步的這種這個這個步驟
最後在工程面就是怎麼去做
怎麼去做這個產品
採用的是A9的這個開發
在傳統的這個創業裡面
尤其在軟體產業裡面
這個A9的開發還是傳統的
這個傳統的這個產品開發的一種模式
但是也有很多情況
我們使用這個water fort
就是流水線的這種模式
來做開發
流水線這種模式呢
他其實非常rigid
就是說不太容易更改
如果你一開始規劃不好的話
那後面你要再更改就合乎了
那產品的改善呢
是在這個公司內部
不斷的這個這個持續的這個改善
一直到改善到最後滿足你的規格需求
就是你一開始的這種定出來的這個規格為主
但是呢這個在Linked Canvas裡面呢
我們的這個產品也是持續改善
可是他的改善呢
是一種這個這個這個incremental
就是他是藉由一個cycle這個持續的再改善
而且這個改善是從實驗室內部到客戶
然後再到實驗室內部再到客戶
這個cycle是不一樣的
這個cycle都是在公司內部
這個cycle是公司客戶公司客戶
所以都是一種這個持續
而且是incremental的一種方式
我今天就是有準備的
準備了Linked Canvas的這個檔案這個範本
不過我想你那個看完我今天的這個講的
也應該知道要怎麼寫
不過你可以那個用我提供的這個
Word檔在直接在上面就可以就可以編輯
還有就是有兩份那個創業計畫書
也讓各位可以參考
我本來是要投影稍微說明一下
不過這個電腦螢幕很怪
沒辦法那個切換成那個其他的模式
所以那個我就請大家自行自行下載那個閱讀
那如果有問題的話
那個禮拜六可以那個開始上課的時候
你可以先先先問問題
那我們先討論完了以後
再進到下一個那個下一堂課
好那我們今天就到這邊
如果有問題可以留下來問我
謝謝
